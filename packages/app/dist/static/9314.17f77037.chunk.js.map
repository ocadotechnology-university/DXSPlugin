{"version":3,"file":"static/9314.17f77037.chunk.js","mappings":"kKAGA,MAAMA,EAAa,CACjB,KAAM,UACN,OAAQ,SACV,EACA,SAASC,EAASC,EAAcC,EAAkB,CAChD,MAAMC,EAAoB,IAAI,KACxBC,EAAO,OAAO,UAAU,SACxBC,EAAS,CAAC,EAChB,GAAI,CAACJ,EACH,OAAOI,EAET,UAAWC,KAAeL,EAAc,CACtC,IAAIM,EAAQD,EAAY,MACxB,MAAME,EAAU,CACd,SAAUF,EAAY,SACtB,GAAGJ,GAAoB,KAAOA,EAAmBH,CACnD,EACA,GAAI,CACe,IAAI,KAAK,EAAG,eAAeK,EAAMI,CAAO,CAC3D,MAAY,CACV,QAAQ,KACN,gBAAgBA,EAAQ,QAAQ,gCAClC,EACAA,EAAQ,SAAW,MACnBD,EAAQ,KACV,CACA,MAAME,EAAQN,EAAE,mBAAmBC,EAAMI,CAAO,EAC1CE,EAAWP,EAAE,mBAAmBC,EAAM,CAC1C,SAAUI,EAAQ,SAClB,KAAM,UACN,OAAQ,UACR,OAAQ,EACV,CAAC,EACDH,EAAO,KAAK,CAAE,MAAAE,EAAO,MAAAE,EAAO,SAAAC,CAAS,CAAC,CACxC,CACA,OAAOL,CACT,CACA,MAAMM,EAAoBC,GAAU,CAClC,KAAM,CAAE,aAAAX,EAAc,iBAAAC,CAAiB,EAAIU,EACrCC,EAAe,CAAC,EAChB,CAACR,EAAQS,CAAQ,EAAI,WAAeD,CAAY,EAUtD,OATA,YAAgB,IAAM,CACpBC,EAASd,EAASC,EAAcC,CAAgB,CAAC,EACjD,MAAMa,EAAa,YAAY,IAAM,CACnCD,EAASd,EAASC,EAAcC,CAAgB,CAAC,CACnD,EAAG,GAAG,EACN,MAAO,IAAM,CACX,cAAca,CAAU,CAC1B,CACF,EAAG,CAACd,EAAcC,CAAgB,CAAC,EAC/BG,EAAO,SAAW,EACG,gBAAoB,WAAgB,KAAMA,EAAO,IAAKW,GAA0B,gBACrG,KACA,CACE,IAAKA,EAAM,MACX,MAAOA,EAAM,MACb,MAAuB,gBAAoB,OAAQ,CAAE,SAAUA,EAAM,QAAS,EAAGA,EAAM,KAAK,CAC9F,CACF,CAAC,CAAC,EAEG,IACT,C","sources":["webpack://app/../../node_modules/@backstage/plugin-home/dist/esm/index-59fc0760.esm.js"],"sourcesContent":["import React from 'react';\nimport { HeaderLabel } from '@backstage/core-components';\n\nconst timeFormat = {\n  hour: \"2-digit\",\n  minute: \"2-digit\"\n};\nfunction getTimes(clockConfigs, customTimeFormat) {\n  const d = /* @__PURE__ */ new Date();\n  const lang = window.navigator.language;\n  const clocks = [];\n  if (!clockConfigs) {\n    return clocks;\n  }\n  for (const clockConfig of clockConfigs) {\n    let label = clockConfig.label;\n    const options = {\n      timeZone: clockConfig.timeZone,\n      ...customTimeFormat != null ? customTimeFormat : timeFormat\n    };\n    try {\n      (/* @__PURE__ */ new Date()).toLocaleString(lang, options);\n    } catch (e) {\n      console.warn(\n        `The timezone ${options.timeZone} is invalid. Defaulting to GMT`\n      );\n      options.timeZone = \"GMT\";\n      label = \"GMT\";\n    }\n    const value = d.toLocaleTimeString(lang, options);\n    const dateTime = d.toLocaleTimeString(lang, {\n      timeZone: options.timeZone,\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: false\n    });\n    clocks.push({ label, value, dateTime });\n  }\n  return clocks;\n}\nconst HeaderWorldClock = (props) => {\n  const { clockConfigs, customTimeFormat } = props;\n  const defaultTimes = [];\n  const [clocks, setTimes] = React.useState(defaultTimes);\n  React.useEffect(() => {\n    setTimes(getTimes(clockConfigs, customTimeFormat));\n    const intervalId = setInterval(() => {\n      setTimes(getTimes(clockConfigs, customTimeFormat));\n    }, 1e3);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [clockConfigs, customTimeFormat]);\n  if (clocks.length !== 0) {\n    return /* @__PURE__ */ React.createElement(React.Fragment, null, clocks.map((clock) => /* @__PURE__ */ React.createElement(\n      HeaderLabel,\n      {\n        key: clock.label,\n        label: clock.label,\n        value: /* @__PURE__ */ React.createElement(\"time\", { dateTime: clock.dateTime }, clock.value)\n      }\n    )));\n  }\n  return null;\n};\n\nexport { HeaderWorldClock };\n//# sourceMappingURL=index-59fc0760.esm.js.map\n"],"names":["timeFormat","getTimes","clockConfigs","customTimeFormat","d","lang","clocks","clockConfig","label","options","value","dateTime","HeaderWorldClock","props","defaultTimes","setTimes","intervalId","clock"],"sourceRoot":""}