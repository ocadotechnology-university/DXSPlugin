{"version":3,"file":"static/7228.af3e5a65.chunk.js","mappings":"iSAKA,MAAMA,KAAU,iBAAc,MAAM,EAC9BC,EAAcC,GAAS,MAC3B,8CAA8CA,IAAS,MAAQ,IAAIA,CAAI,GAAK,EAAE,SAChF,EAAE,KAAMC,GAAQA,EAAI,KAAK,CAAC,EAAE,KAAMC,GAAS,MAAM,QAAQA,CAAI,EAAIA,EAAK,CAAC,EAAIA,CAAI,EACzEC,EAAmBC,GAAU,CACjC,KAAM,CAAE,SAAAC,EAAU,gBAAAC,CAAgB,EAAIF,EAChC,CAACG,EAASC,CAAU,EAAI,WAAe,EAAI,EAC3C,CAACC,EAAMC,CAAO,EAAI,WAAe,CACrC,MAAO,GACP,UAAW,EACb,CAAC,EACK,CAACV,EAAMW,CAAO,EAAI,WACtBL,GAAmB,aACrB,EACMM,EAAa,cAAkB,IAAM,CACzCJ,EAAW,EAAI,EACfT,EAAWC,CAAI,EAAE,KAAMa,GAAYH,EAAQG,CAAO,CAAC,CACrD,EAAG,CAACb,CAAI,CAAC,EACHc,EAAoBC,GAAY,CACpCJ,EAAQI,CAAO,CACjB,EACA,YAAgB,IAAM,CACpBP,EAAW,EAAK,CAClB,EAAG,CAACC,CAAI,CAAC,EACT,YAAgB,IAAM,CACpBG,EAAW,CACb,EAAG,CAACA,CAAU,CAAC,EACf,MAAMI,EAAQ,CACZ,QAAAT,EACA,KAAAE,EACA,KAAAT,EACA,WAAAY,EACA,iBAAAE,CACF,EACA,OAAuB,gBAAoBhB,EAAQ,SAAU,CAAE,MAAAkB,CAAM,EAAGX,CAAQ,CAClF,EACMY,EAAgB,IAAM,CAC1B,MAAMD,EAAQ,aAAiBlB,CAAO,EACtC,GAAIkB,IAAU,OACZ,MAAM,IAAI,MAAM,wDAAwD,EAE1E,OAAOA,CACT,EAEME,EAAU,IAAM,CACpB,KAAM,CAAE,WAAAN,CAAW,EAAIK,EAAc,EACrC,OAAuB,gBAAoB,IAAQ,CAAE,QAAS,YAAa,MAAO,UAAW,QAAS,IAAML,EAAW,CAAE,EAAG,QAAQ,CACtI,EAEMO,EAAU,IAAM,CACpB,KAAM,CAAE,KAAAV,EAAM,QAAAF,CAAQ,EAAIU,EAAc,EACxC,OAAIV,EACqB,gBAAoB,IAAY,CAAE,UAAW,EAAK,EAAG,YAAY,EACnE,gBAAoB,MAAO,KAAsB,gBAAoB,IAAY,CAAE,UAAW,EAAK,EAAGE,EAAK,KAAK,EAAmB,gBAAoB,IAAY,CAAE,UAAW,EAAK,EAAGA,EAAK,SAAS,CAAC,CAChO,EAEMW,EAAW,IAAM,CACrB,KAAM,CAAE,KAAApB,EAAM,iBAAAc,CAAiB,EAAIG,EAAc,EAC3CI,EAAa,CAAC,MAAO,aAAa,EACxC,OAAuB,gBAAoB,IAAa,CAAE,UAAW,UAAW,EAAmB,gBAAoB,IAAW,CAAE,UAAW,QAAS,EAAG,WAAW,EAAmB,gBACvL,IACA,CACE,aAAc,YACd,MAAOrB,EACP,SAAWsB,GAAMR,EAAiBQ,EAAE,OAAO,KAAK,CAClD,EACAD,EAAW,IAAKE,GAAsB,gBACpC,IACA,CACE,IAAKA,EACL,MAAOA,EACP,QAAyB,gBAAoB,IAAO,IAAI,EACxD,MAAO,IAAWA,CAAC,CACrB,CACF,CAAC,CACH,CAAC,CACH,C","sources":["webpack://app/../../node_modules/@backstage/plugin-home/dist/esm/index-4517c5bc.esm.js"],"sourcesContent":["import React, { createContext } from 'react';\nimport { Button, FormControl, FormLabel, RadioGroup, FormControlLabel, Radio } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport upperFirst from 'lodash/upperFirst';\n\nconst Context = createContext(void 0);\nconst getNewJoke = (type) => fetch(\n  `https://official-joke-api.appspot.com/jokes${type !== \"any\" ? `/${type}` : \"\"}/random`\n).then((res) => res.json()).then((data) => Array.isArray(data) ? data[0] : data);\nconst ContextProvider = (props) => {\n  const { children, defaultCategory } = props;\n  const [loading, setLoading] = React.useState(true);\n  const [joke, setJoke] = React.useState({\n    setup: \"\",\n    punchline: \"\"\n  });\n  const [type, setType] = React.useState(\n    defaultCategory || \"programming\"\n  );\n  const rerollJoke = React.useCallback(() => {\n    setLoading(true);\n    getNewJoke(type).then((newJoke) => setJoke(newJoke));\n  }, [type]);\n  const handleChangeType = (newType) => {\n    setType(newType);\n  };\n  React.useEffect(() => {\n    setLoading(false);\n  }, [joke]);\n  React.useEffect(() => {\n    rerollJoke();\n  }, [rerollJoke]);\n  const value = {\n    loading,\n    joke,\n    type,\n    rerollJoke,\n    handleChangeType\n  };\n  return /* @__PURE__ */ React.createElement(Context.Provider, { value }, children);\n};\nconst useRandomJoke = () => {\n  const value = React.useContext(Context);\n  if (value === void 0) {\n    throw new Error(\"useRandomJoke must be used within a RandomJokeProvider\");\n  }\n  return value;\n};\n\nconst Actions = () => {\n  const { rerollJoke } = useRandomJoke();\n  return /* @__PURE__ */ React.createElement(Button, { variant: \"contained\", color: \"primary\", onClick: () => rerollJoke() }, \"Reroll\");\n};\n\nconst Content = () => {\n  const { joke, loading } = useRandomJoke();\n  if (loading)\n    return /* @__PURE__ */ React.createElement(Typography, { paragraph: true }, \"Loading...\");\n  return /* @__PURE__ */ React.createElement(\"div\", null, /* @__PURE__ */ React.createElement(Typography, { paragraph: true }, joke.setup), /* @__PURE__ */ React.createElement(Typography, { paragraph: true }, joke.punchline));\n};\n\nconst Settings = () => {\n  const { type, handleChangeType } = useRandomJoke();\n  const JOKE_TYPES = [\"any\", \"programming\"];\n  return /* @__PURE__ */ React.createElement(FormControl, { component: \"fieldset\" }, /* @__PURE__ */ React.createElement(FormLabel, { component: \"legend\" }, \"Joke Type\"), /* @__PURE__ */ React.createElement(\n    RadioGroup,\n    {\n      \"aria-label\": \"joke type\",\n      value: type,\n      onChange: (e) => handleChangeType(e.target.value)\n    },\n    JOKE_TYPES.map((t) => /* @__PURE__ */ React.createElement(\n      FormControlLabel,\n      {\n        key: t,\n        value: t,\n        control: /* @__PURE__ */ React.createElement(Radio, null),\n        label: upperFirst(t)\n      }\n    ))\n  ));\n};\n\nexport { Actions, Content, ContextProvider, Settings };\n//# sourceMappingURL=index-4517c5bc.esm.js.map\n"],"names":["Context","getNewJoke","type","res","data","ContextProvider","props","children","defaultCategory","loading","setLoading","joke","setJoke","setType","rerollJoke","newJoke","handleChangeType","newType","value","useRandomJoke","Actions","Content","Settings","JOKE_TYPES","e","t"],"sourceRoot":""}