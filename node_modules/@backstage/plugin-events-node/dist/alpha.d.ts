import * as _backstage_backend_plugin_api from '@backstage/backend-plugin-api';
import { EventBroker, EventPublisher, EventSubscriber, HttpPostIngressOptions } from '@backstage/plugin-events-node';

/**
 * @alpha
 */
interface EventsExtensionPoint {
<<<<<<< HEAD
    setEventBroker(eventBroker: EventBroker): void;
    addPublishers(...publishers: Array<EventPublisher | Array<EventPublisher>>): void;
=======
    /**
     * @deprecated use `eventsServiceRef` and `eventsServiceFactory` instead
     */
    setEventBroker(eventBroker: EventBroker): void;
    /**
     * @deprecated use `EventsService.publish` instead
     */
    addPublishers(...publishers: Array<EventPublisher | Array<EventPublisher>>): void;
    /**
     * @deprecated use `EventsService.subscribe` instead
     */
>>>>>>> master
    addSubscribers(...subscribers: Array<EventSubscriber | Array<EventSubscriber>>): void;
    addHttpPostIngress(options: HttpPostIngressOptions): void;
}
/**
 * @alpha
 */
declare const eventsExtensionPoint: _backstage_backend_plugin_api.ExtensionPoint<EventsExtensionPoint>;

<<<<<<< HEAD
export { EventsExtensionPoint, eventsExtensionPoint };
=======
export { type EventsExtensionPoint, eventsExtensionPoint };
>>>>>>> master
