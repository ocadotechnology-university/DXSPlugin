import { createPlugin, createComponentExtension, useApi, identityApiRef, useRouteRef } from '@backstage/core-plugin-api';
<<<<<<< HEAD
import { c as catalogIndexRouteRef } from './esm/routes-e3daad75.esm.js';
export { MembersListCard } from './esm/MembersListCard-cb148b44.esm.js';
export { GroupProfileCard } from './esm/GroupProfileCard-d9207fd9.esm.js';
export { UserProfileCard } from './esm/UserProfileCard-d467b6e5.esm.js';
export { OwnershipCard } from './esm/OwnershipCard-9f8835e6.esm.js';
import React from 'react';
import { getCompoundEntityRef, DEFAULT_NAMESPACE, stringifyEntityRef } from '@backstage/catalog-model';
import { SidebarItem, SidebarSubmenu, SidebarSubmenuItem } from '@backstage/core-components';
import useAsync from 'react-use/lib/useAsync';
import { catalogApiRef, entityRouteRef } from '@backstage/plugin-catalog-react';
import '@material-ui/core';
import '@material-ui/lab/Pagination';
=======
import { c as catalogIndexRouteRef } from './esm/routes-B-Sa5Rrg.esm.js';
export { MembersListCard } from './esm/MembersListCard-DB1VdRYu.esm.js';
export { GroupProfileCard } from './esm/GroupProfileCard-BlBaoRJ2.esm.js';
export { UserProfileCard } from './esm/UserProfileCard-DDOjuS1z.esm.js';
export { OwnershipCard } from './esm/OwnershipCard-DUaYCP-K.esm.js';
import React from 'react';
import { getCompoundEntityRef, DEFAULT_NAMESPACE, stringifyEntityRef } from '@backstage/catalog-model';
import { SidebarItem, SidebarSubmenu, SidebarSubmenuItem } from '@backstage/core-components';
import useAsync from 'react-use/esm/useAsync';
import { catalogApiRef, entityRouteRef } from '@backstage/plugin-catalog-react';
import '@material-ui/core/Box';
import '@material-ui/core/Grid';
import '@material-ui/core/Switch';
import '@material-ui/core/Typography';
import '@material-ui/core/styles';
import '@material-ui/lab/Pagination';
import '@material-ui/core/IconButton';
import '@material-ui/core/List';
import '@material-ui/core/ListItem';
import '@material-ui/core/ListItemIcon';
import '@material-ui/core/ListItemText';
import '@material-ui/core/Tooltip';
>>>>>>> master
import '@material-ui/icons/AccountTree';
import '@material-ui/lab/Alert';
import '@material-ui/icons/Cached';
import '@material-ui/icons/Edit';
import '@material-ui/icons/Email';
import '@material-ui/icons/Group';
<<<<<<< HEAD
import './esm/LinksGroup-9fefd100.esm.js';
import '@material-ui/icons/Language';
import '@backstage/plugin-catalog-react/alpha';
import '@backstage/plugin-catalog-common/alpha';
import '@material-ui/icons/Person';
=======
import './esm/LinksGroup-BGqEsmrO.esm.js';
import '@material-ui/icons/Language';
import '@material-ui/core/Divider';
import '@backstage/plugin-catalog-react/alpha';
import '@backstage/plugin-catalog-common/alpha';
import '@material-ui/icons/Person';
import '@material-ui/core/ListItemSecondaryAction';
>>>>>>> master
import 'pluralize';
import 'p-limit';
import 'qs';
import 'lodash';

const orgPlugin = createPlugin({
  id: "org",
  externalRoutes: {
    catalogIndex: catalogIndexRouteRef
  }
});
const EntityGroupProfileCard = orgPlugin.provide(
  createComponentExtension({
    name: "EntityGroupProfileCard",
    component: {
<<<<<<< HEAD
      lazy: () => import('./esm/index-ad2d9b29.esm.js').then((m) => m.GroupProfileCard)
=======
      lazy: () => import('./esm/index-BuXsbtgm.esm.js').then((m) => m.GroupProfileCard)
>>>>>>> master
    }
  })
);
const EntityMembersListCard = orgPlugin.provide(
  createComponentExtension({
    name: "EntityMembersListCard",
    component: {
<<<<<<< HEAD
      lazy: () => import('./esm/index-ad2d9b29.esm.js').then((m) => m.MembersListCard)
=======
      lazy: () => import('./esm/index-BuXsbtgm.esm.js').then((m) => m.MembersListCard)
>>>>>>> master
    }
  })
);
const EntityOwnershipCard = orgPlugin.provide(
  createComponentExtension({
    name: "EntityOwnershipCard",
    component: {
<<<<<<< HEAD
      lazy: () => import('./esm/index-ad2d9b29.esm.js').then((m) => m.OwnershipCard)
=======
      lazy: () => import('./esm/index-BuXsbtgm.esm.js').then((m) => m.OwnershipCard)
>>>>>>> master
    }
  })
);
const EntityUserProfileCard = orgPlugin.provide(
  createComponentExtension({
    name: "EntityUserProfileCard",
    component: {
<<<<<<< HEAD
      lazy: () => import('./esm/index-ad2d9b29.esm.js').then((m) => m.UserProfileCard)
=======
      lazy: () => import('./esm/index-BuXsbtgm.esm.js').then((m) => m.UserProfileCard)
>>>>>>> master
    }
  })
);

const MyGroupsSidebarItem = (props) => {
  const { singularTitle, pluralTitle, icon, filter } = props;
  const identityApi = useApi(identityApiRef);
  const catalogApi = useApi(catalogApiRef);
  const catalogEntityRoute = useRouteRef(entityRouteRef);
  const { value: groups } = useAsync(async () => {
    const profile = await identityApi.getBackstageIdentity();
    const response = await catalogApi.getEntities({
      filter: [
        {
          kind: "group",
          "relations.hasMember": profile.userEntityRef,
          ...filter != null ? filter : {}
        }
      ],
      fields: ["metadata", "kind"]
    });
    return response.items;
  }, []);
  if (!(groups == null ? void 0 : groups.length)) {
    return null;
  }
  if (groups.length === 1) {
    const group = groups[0];
    return /* @__PURE__ */ React.createElement(
      SidebarItem,
      {
        text: singularTitle,
        to: catalogEntityRoute(getCompoundEntityRef(group)),
        icon
      }
    );
  }
  return /* @__PURE__ */ React.createElement(SidebarItem, { icon, text: pluralTitle }, /* @__PURE__ */ React.createElement(SidebarSubmenu, { title: pluralTitle }, groups == null ? void 0 : groups.map(function groupsMap(group) {
    return /* @__PURE__ */ React.createElement(
      SidebarSubmenuItem,
      {
        title: group.metadata.title || group.metadata.name,
        subtitle: group.metadata.namespace !== DEFAULT_NAMESPACE ? group.metadata.namespace : void 0,
        to: catalogEntityRoute(getCompoundEntityRef(group)),
        icon,
        key: stringifyEntityRef(group)
      }
    );
  })));
};

export { EntityGroupProfileCard, EntityMembersListCard, EntityOwnershipCard, EntityUserProfileCard, MyGroupsSidebarItem, orgPlugin, orgPlugin as plugin };
//# sourceMappingURL=index.esm.js.map
